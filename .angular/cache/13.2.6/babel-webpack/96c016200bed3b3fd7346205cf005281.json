{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\roadcast-web\\\\jfl-tracking\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { HttpBackend, HttpClient } from \"@angular/common/http\";\nlet OrderService = class OrderService {\n  constructor(router, httpDirect, handler) {\n    this.router = router;\n    this.httpDirect = httpDirect;\n    this.httpDirect = new HttpClient(handler);\n  }\n\n  init() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const urlParams = new URLSearchParams(window.location.search);\n      const myParam = urlParams.get('order_id');\n\n      if (!myParam) {\n        yield _this.router.navigateByUrl('error');\n      }\n\n      const api_url = 'https://jfl-api-dev.roadcast.co.in/api/v1/';\n      const response = yield fetch(api_url + 'order/order_tracking/' + myParam, {\n        method: \"GET\"\n      });\n      const data = yield response.json();\n      _this.order = data.data;\n      _this.rating = data.rating;\n    })();\n  }\n\n};\n\nOrderService.ctorParameters = () => [{\n  type: Router\n}, {\n  type: HttpClient\n}, {\n  type: HttpBackend\n}];\n\nOrderService = __decorate([Injectable({\n  providedIn: 'root'\n})], OrderService);\nexport { OrderService };","map":{"version":3,"sources":["D:/roadcast-web/jfl-tracking/src/app/order.service.ts"],"names":["__decorate","Injectable","Router","HttpBackend","HttpClient","OrderService","constructor","router","httpDirect","handler","init","urlParams","URLSearchParams","window","location","search","myParam","get","navigateByUrl","api_url","response","fetch","method","data","json","order","rating","ctorParameters","type","providedIn"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,sBAAxC;AACA,IAAIC,YAAY,GAAG,MAAMA,YAAN,CAAmB;AAClCC,EAAAA,WAAW,CAACC,MAAD,EAASC,UAAT,EAAqBC,OAArB,EAA8B;AACrC,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKA,UAAL,GAAkB,IAAIJ,UAAJ,CAAeK,OAAf,CAAlB;AACH;;AACKC,EAAAA,IAAI,GAAG;AAAA;;AAAA;AACT,YAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAlB;AACA,YAAMC,OAAO,GAAGL,SAAS,CAACM,GAAV,CAAc,UAAd,CAAhB;;AACA,UAAI,CAACD,OAAL,EAAc;AACV,cAAM,KAAI,CAACT,MAAL,CAAYW,aAAZ,CAA0B,OAA1B,CAAN;AACH;;AACD,YAAMC,OAAO,GAAG,4CAAhB;AACA,YAAMC,QAAQ,SAASC,KAAK,CAACF,OAAO,GAAG,uBAAV,GAAoCH,OAArC,EAA8C;AACtEM,QAAAA,MAAM,EAAE;AAD8D,OAA9C,CAA5B;AAGA,YAAMC,IAAI,SAASH,QAAQ,CAACI,IAAT,EAAnB;AACA,MAAA,KAAI,CAACC,KAAL,GAAaF,IAAI,CAACA,IAAlB;AACA,MAAA,KAAI,CAACG,MAAL,GAAcH,IAAI,CAACG,MAAnB;AAZS;AAaZ;;AAnBiC,CAAtC;;AAqBArB,YAAY,CAACsB,cAAb,GAA8B,MAAM,CAChC;AAAEC,EAAAA,IAAI,EAAE1B;AAAR,CADgC,EAEhC;AAAE0B,EAAAA,IAAI,EAAExB;AAAR,CAFgC,EAGhC;AAAEwB,EAAAA,IAAI,EAAEzB;AAAR,CAHgC,CAApC;;AAKAE,YAAY,GAAGL,UAAU,CAAC,CACtBC,UAAU,CAAC;AACP4B,EAAAA,UAAU,EAAE;AADL,CAAD,CADY,CAAD,EAItBxB,YAJsB,CAAzB;AAKA,SAASA,YAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { HttpBackend, HttpClient } from \"@angular/common/http\";\r\nlet OrderService = class OrderService {\r\n    constructor(router, httpDirect, handler) {\r\n        this.router = router;\r\n        this.httpDirect = httpDirect;\r\n        this.httpDirect = new HttpClient(handler);\r\n    }\r\n    async init() {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        const myParam = urlParams.get('order_id');\r\n        if (!myParam) {\r\n            await this.router.navigateByUrl('error');\r\n        }\r\n        const api_url = 'https://jfl-api-dev.roadcast.co.in/api/v1/';\r\n        const response = await fetch(api_url + 'order/order_tracking/' + myParam, {\r\n            method: \"GET\",\r\n        });\r\n        const data = await response.json();\r\n        this.order = data.data;\r\n        this.rating = data.rating;\r\n    }\r\n};\r\nOrderService.ctorParameters = () => [\r\n    { type: Router },\r\n    { type: HttpClient },\r\n    { type: HttpBackend }\r\n];\r\nOrderService = __decorate([\r\n    Injectable({\r\n        providedIn: 'root'\r\n    })\r\n], OrderService);\r\nexport { OrderService };\r\n"]},"metadata":{},"sourceType":"module"}
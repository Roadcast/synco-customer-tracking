{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\roadcast-web\\\\jfl-tracking\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { HttpClient } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport class OrderService {\n  constructor(router, httpDirect, handler) {\n    this.router = router;\n    this.httpDirect = httpDirect;\n    this.httpDirect = new HttpClient(handler);\n  }\n\n  init() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const urlParams = new URLSearchParams(window.location.search);\n      const myParam = urlParams.get('order_id');\n\n      if (!myParam) {\n        yield _this.router.navigateByUrl('error');\n      }\n\n      const api_url = 'https://jfl-api-dev.roadcast.co.in/api/v1/';\n      const response = yield fetch(api_url + 'order/order_tracking/' + myParam, {\n        method: \"GET\"\n      });\n      const data = yield response.json();\n      _this.order = data.data;\n      _this.rating = data.rating;\n    })();\n  }\n\n}\n\nOrderService.ɵfac = function OrderService_Factory(t) {\n  return new (t || OrderService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject(i2.HttpBackend));\n};\n\nOrderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: OrderService,\n  factory: OrderService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["D:/roadcast-web/jfl-tracking/src/app/order.service.ts"],"names":["HttpClient","i0","i1","i2","OrderService","constructor","router","httpDirect","handler","init","urlParams","URLSearchParams","window","location","search","myParam","get","navigateByUrl","api_url","response","fetch","method","data","json","order","rating","ɵfac","OrderService_Factory","t","ɵɵinject","Router","HttpBackend","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,UAAT,QAA2B,sBAA3B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,YAAN,CAAmB;AACtBC,EAAAA,WAAW,CAACC,MAAD,EAASC,UAAT,EAAqBC,OAArB,EAA8B;AACrC,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKA,UAAL,GAAkB,IAAIP,UAAJ,CAAeQ,OAAf,CAAlB;AACH;;AACKC,EAAAA,IAAI,GAAG;AAAA;;AAAA;AACT,YAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAlB;AACA,YAAMC,OAAO,GAAGL,SAAS,CAACM,GAAV,CAAc,UAAd,CAAhB;;AACA,UAAI,CAACD,OAAL,EAAc;AACV,cAAM,KAAI,CAACT,MAAL,CAAYW,aAAZ,CAA0B,OAA1B,CAAN;AACH;;AACD,YAAMC,OAAO,GAAG,4CAAhB;AACA,YAAMC,QAAQ,SAASC,KAAK,CAACF,OAAO,GAAG,uBAAV,GAAoCH,OAArC,EAA8C;AACtEM,QAAAA,MAAM,EAAE;AAD8D,OAA9C,CAA5B;AAGA,YAAMC,IAAI,SAASH,QAAQ,CAACI,IAAT,EAAnB;AACA,MAAA,KAAI,CAACC,KAAL,GAAaF,IAAI,CAACA,IAAlB;AACA,MAAA,KAAI,CAACG,MAAL,GAAcH,IAAI,CAACG,MAAnB;AAZS;AAaZ;;AAnBqB;;AAqB1BrB,YAAY,CAACsB,IAAb,GAAoB,SAASC,oBAAT,CAA8BC,CAA9B,EAAiC;AAAE,SAAO,KAAKA,CAAC,IAAIxB,YAAV,EAAwBH,EAAE,CAAC4B,QAAH,CAAY3B,EAAE,CAAC4B,MAAf,CAAxB,EAAgD7B,EAAE,CAAC4B,QAAH,CAAY1B,EAAE,CAACH,UAAf,CAAhD,EAA4EC,EAAE,CAAC4B,QAAH,CAAY1B,EAAE,CAAC4B,WAAf,CAA5E,CAAP;AAAkH,CAAzK;;AACA3B,YAAY,CAAC4B,KAAb,GAAqB,aAAc/B,EAAE,CAACgC,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAE9B,YAAT;AAAuB+B,EAAAA,OAAO,EAAE/B,YAAY,CAACsB,IAA7C;AAAmDU,EAAAA,UAAU,EAAE;AAA/D,CAAtB,CAAnC","sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/router\";\r\nimport * as i2 from \"@angular/common/http\";\r\nexport class OrderService {\r\n    constructor(router, httpDirect, handler) {\r\n        this.router = router;\r\n        this.httpDirect = httpDirect;\r\n        this.httpDirect = new HttpClient(handler);\r\n    }\r\n    async init() {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        const myParam = urlParams.get('order_id');\r\n        if (!myParam) {\r\n            await this.router.navigateByUrl('error');\r\n        }\r\n        const api_url = 'https://jfl-api-dev.roadcast.co.in/api/v1/';\r\n        const response = await fetch(api_url + 'order/order_tracking/' + myParam, {\r\n            method: \"GET\",\r\n        });\r\n        const data = await response.json();\r\n        this.order = data.data;\r\n        this.rating = data.rating;\r\n    }\r\n}\r\nOrderService.ɵfac = function OrderService_Factory(t) { return new (t || OrderService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject(i2.HttpBackend)); };\r\nOrderService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: OrderService, factory: OrderService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\roadcast-web\\\\jfl-tracking\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { interval, Subscription } from \"rxjs\";\nvar Marker = google.maps.Marker;\nvar Polyline = google.maps.Polyline;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../order.service\";\nimport * as i2 from \"@angular/common/http\";\nconst _c0 = [\"map\"];\nexport class TestMapComponent {\n  constructor(orderService, http) {\n    this.orderService = orderService;\n    this.http = http;\n    this.options = {\n      zoomControl: true,\n      gestureHandling: 'greedy'\n    };\n    this.coordinates = [];\n    this.markers = [];\n    this.order = {};\n    this.orderHereMapRoutePath = {};\n    this.marker = [];\n    this.subscribe = new Subscription();\n    this.getData = [];\n    this.newPositionsList = [];\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.orderService.init().then();\n      _this.order = _this.orderService.order;\n\n      _this.mapReady(); // this.dataFirstCall();\n\n    })();\n  }\n\n  mapReady() {\n    const mapOptions = {\n      center: {\n        lat: this.order.delivery_location.latitude,\n        lng: this.order.delivery_location.longitude\n      },\n      zoom: 14,\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\n      disableDefaultUI: true\n    };\n    this.polyline = new Polyline();\n    this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\n    this.pickupLatLng = {\n      lat: this.order.pick_up_location.latitude,\n      lng: this.order.pick_up_location.longitude\n    };\n    this.markers.push(this.pickupLatLng);\n    const pickupMarker = new google.maps.Marker({\n      position: new google.maps.LatLng(this.pickupLatLng.lat, this.pickupLatLng.lng),\n      icon: {\n        url: 'assets/images/store.svg',\n        scaledSize: new google.maps.Size(35, 35) // size\n\n      },\n      title: ''\n    });\n    pickupMarker.setMap(this.map);\n    google.maps.event.addListener(pickupMarker, 'click', () => {\n      const infowindow = new google.maps.InfoWindow({\n        content: 'Pickup'\n      });\n      infowindow.open(this.map, pickupMarker);\n    });\n    this.dropLatLng = {\n      lat: this.order.delivery_location.latitude,\n      lng: this.order.delivery_location.longitude\n    };\n    this.markers.push(this.dropLatLng);\n    const dropMarker = new google.maps.Marker({\n      position: new google.maps.LatLng(this.dropLatLng.lat, this.dropLatLng.lng),\n      icon: {\n        url: 'assets/images/home.svg',\n        scaledSize: new google.maps.Size(35, 35) // size\n\n      },\n      title: ''\n    });\n    dropMarker.setMap(this.map);\n    google.maps.event.addListener(dropMarker, 'click', () => {\n      const infowindow = new google.maps.InfoWindow({\n        content: 'Drop'\n      });\n      infowindow.open(this.map, dropMarker);\n    });\n    this.getRiderPathFromHerePathThenCacheLocally(this.order).then();\n    this.riderLatLng = {\n      lat: this.order.rider_position.latitude,\n      lng: this.order.rider_position.longitude\n    };\n    this.oldRiderLatLng = this.riderLatLng;\n    const riderIcon = {\n      url: 'assets/images/bike.svg',\n      scaledSize: new google.maps.Size(40, 40)\n    };\n    const marker1 = new Marker({\n      map: this.map,\n      icon: riderIcon,\n      title: '',\n      position: new google.maps.LatLng(this.order.rider_position.latitude, this.order.rider_position.longitude)\n    }); //  var bounds = new google.maps.LatLngBounds();\n\n    this.map.panTo(new google.maps.LatLng(this.order.rider_position.latitude, this.order.rider_position.longitude));\n    this.subscribe = interval(2000).subscribe(() => {\n      this.orderService.init().then();\n      this.order = this.orderService.order;\n      this.riderLatLng = {\n        lat: this.order.rider_position.latitude,\n        lng: this.order.rider_position.longitude\n      };\n      const newPosition = new google.maps.LatLng(this.riderLatLng.lat, this.riderLatLng.lng);\n      this.newPositionsList.push(this.riderLatLng.lat, this.riderLatLng.lng);\n      console.log(this.newPositionsList);\n      const lastPosn = new google.maps.LatLng(this.oldRiderLatLng.lat, this.oldRiderLatLng.lng);\n      this.map.panTo(newPosition); // this.map.setCenter(newPosition);\n\n      const heading = google.maps.geometry.spherical.computeHeading(lastPosn, newPosition);\n      const bearing = this.getBearing(this.oldRiderLatLng.lat, this.oldRiderLatLng.lng, this.riderLatLng.lat, this.riderLatLng.lng);\n      const bearingData = Number(bearing.toFixed(0));\n\n      if (bearingData === 0) {\n        this.bikeSvg = this.oldBearingData - this.oldBearingData % 15;\n      } else {\n        this.bikeSvg = bearingData - bearingData % 15;\n        this.oldBearingData = bearingData;\n      }\n\n      if (this.oldBearingData === undefined) {\n        marker1.setIcon({\n          anchor: new google.maps.Point(45, 45),\n          url: 'assets/images/bike.svg',\n          scaledSize: new google.maps.Size(40, 40) // rotation: bearing\n\n        });\n      } else {\n        marker1.setIcon({\n          anchor: new google.maps.Point(45, 45),\n          url: 'assets/images/svg/' + this.bikeSvg + '.svg',\n          scaledSize: new google.maps.Size(40, 40) // rotation: bearing\n\n        });\n        moveMarker(newPosition);\n      }\n\n      console.log('old bearing', this.oldBearingData);\n      console.log(heading);\n      console.log(newPosition.lat() + \" lat : \" + newPosition.lng());\n      this.getRiderPathFromHerePathThenCacheLocally(this.order).then();\n      const result = [this.riderLatLng.lat, this.riderLatLng.lng];\n      const pos = [this.oldRiderLatLng.lat, this.oldRiderLatLng.lng];\n      this.oldRiderLatLng = this.riderLatLng;\n    });\n\n    if (this.order.status_name === 'delivered' || this.order.status_name === 'cancelled') {\n      this.subscribe.unsubscribe();\n    }\n\n    const numDeltas = 100;\n    const delay = 100;\n    let i = 0;\n\n    function moveMarker(linepos) {\n      marker1.setPosition(linepos);\n\n      if (i != numDeltas) {\n        i++;\n        setTimeout(moveMarker, delay);\n      }\n    }\n  }\n\n  radians(n) {\n    return n * (Math.PI / 180);\n  }\n\n  degrees(n) {\n    return n * (180 / Math.PI);\n  }\n\n  getBearing(startLat, startLong, endLat, endLong) {\n    startLat = this.radians(startLat);\n    startLong = this.radians(startLong);\n    endLat = this.radians(endLat);\n    endLong = this.radians(endLong);\n    var dLong = endLong - startLong;\n    var dPhi = Math.log(Math.tan(endLat / 2.0 + Math.PI / 4.0) / Math.tan(startLat / 2.0 + Math.PI / 4.0));\n\n    if (Math.abs(dLong) > Math.PI) {\n      if (dLong > 0.0) dLong = -(2.0 * Math.PI - dLong);else dLong = 2.0 * Math.PI + dLong;\n    }\n\n    return (this.degrees(Math.atan2(dLong, dPhi)) + 360.0) % 360.0;\n  }\n\n  getRiderPathFromHerePathThenCacheLocally(order) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let origin, destination;\n\n      if (order.rider_position && order.rider_position.latitude && order.rider_position.longitude) {\n        origin = [order.rider_position.longitude, order.rider_position.latitude];\n      }\n\n      if (order.delivery_location && order.delivery_location.latitude && order.delivery_location.longitude) {\n        destination = [order.delivery_location.longitude, order.delivery_location.latitude];\n      }\n\n      if (origin && destination) {\n        const request = _this2.http.post('https://routing.roadcast.co.in/ors/v2/directions/driving-car/geojson', {\n          coordinates: [origin, destination]\n        }).subscribe(res => {\n          _this2.coordinates = res.features[0].geometry.coordinates;\n\n          const coordsClean = _this2.coordinates.map(x => {\n            return {\n              lat: x[1],\n              lng: x[0]\n            };\n          });\n\n          _this2.polyline.setMap(null);\n\n          _this2.polyline = new google.maps.Polyline({\n            strokeColor: 'blue',\n            map: _this2.map,\n            path: coordsClean,\n            geodesic: true,\n            visible: true\n          }); // console.log('polylines created')\n        });\n      }\n    })();\n  }\n\n}\n\nTestMapComponent.ɵfac = function TestMapComponent_Factory(t) {\n  return new (t || TestMapComponent)(i0.ɵɵdirectiveInject(i1.OrderService), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\n\nTestMapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TestMapComponent,\n  selectors: [[\"app-test-map\"]],\n  viewQuery: function TestMapComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.mapElement = _t.first);\n    }\n  },\n  decls: 2,\n  vars: 0,\n  consts: [[\"id\", \"map\", 2, \"border\", \"1px solid #35b0e3\", \"height\", \"50vh\", \"max-width\", \"100%\"], [\"map\", \"\"]],\n  template: function TestMapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0, 1);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0ZXN0LW1hcC5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"sources":["D:/roadcast-web/jfl-tracking/src/app/test-map/test-map.component.ts"],"names":["interval","Subscription","Marker","google","maps","Polyline","i0","i1","i2","_c0","TestMapComponent","constructor","orderService","http","options","zoomControl","gestureHandling","coordinates","markers","order","orderHereMapRoutePath","marker","subscribe","getData","newPositionsList","ngOnInit","init","then","mapReady","mapOptions","center","lat","delivery_location","latitude","lng","longitude","zoom","mapTypeId","MapTypeId","ROADMAP","disableDefaultUI","polyline","map","Map","mapElement","nativeElement","pickupLatLng","pick_up_location","push","pickupMarker","position","LatLng","icon","url","scaledSize","Size","title","setMap","event","addListener","infowindow","InfoWindow","content","open","dropLatLng","dropMarker","getRiderPathFromHerePathThenCacheLocally","riderLatLng","rider_position","oldRiderLatLng","riderIcon","marker1","panTo","newPosition","console","log","lastPosn","heading","geometry","spherical","computeHeading","bearing","getBearing","bearingData","Number","toFixed","bikeSvg","oldBearingData","undefined","setIcon","anchor","Point","moveMarker","result","pos","status_name","unsubscribe","numDeltas","delay","i","linepos","setPosition","setTimeout","radians","n","Math","PI","degrees","startLat","startLong","endLat","endLong","dLong","dPhi","tan","abs","atan2","origin","destination","request","post","res","features","coordsClean","x","strokeColor","path","geodesic","visible","ɵfac","TestMapComponent_Factory","t","ɵɵdirectiveInject","OrderService","HttpClient","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","TestMapComponent_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","decls","vars","consts","template","TestMapComponent_Template","ɵɵelement","styles"],"mappings":"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","sourcesContent":["import { interval, Subscription } from \"rxjs\";\r\nvar Marker = google.maps.Marker;\r\nvar Polyline = google.maps.Polyline;\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../order.service\";\r\nimport * as i2 from \"@angular/common/http\";\r\nconst _c0 = [\"map\"];\r\nexport class TestMapComponent {\r\n    constructor(orderService, http) {\r\n        this.orderService = orderService;\r\n        this.http = http;\r\n        this.options = {\r\n            zoomControl: true,\r\n            gestureHandling: 'greedy',\r\n        };\r\n        this.coordinates = [];\r\n        this.markers = [];\r\n        this.order = {};\r\n        this.orderHereMapRoutePath = {};\r\n        this.marker = [];\r\n        this.subscribe = new Subscription();\r\n        this.getData = [];\r\n        this.newPositionsList = [];\r\n    }\r\n    async ngOnInit() {\r\n        await this.orderService.init().then();\r\n        this.order = this.orderService.order;\r\n        this.mapReady();\r\n        // this.dataFirstCall();\r\n    }\r\n    mapReady() {\r\n        const mapOptions = {\r\n            center: {\r\n                lat: this.order.delivery_location.latitude,\r\n                lng: this.order.delivery_location.longitude,\r\n            },\r\n            zoom: 14,\r\n            mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n            disableDefaultUI: true,\r\n        };\r\n        this.polyline = new Polyline();\r\n        this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\r\n        this.pickupLatLng = {\r\n            lat: this.order.pick_up_location.latitude,\r\n            lng: this.order.pick_up_location.longitude,\r\n        };\r\n        this.markers.push(this.pickupLatLng);\r\n        const pickupMarker = new google.maps.Marker({\r\n            position: new google.maps.LatLng(this.pickupLatLng.lat, this.pickupLatLng.lng),\r\n            icon: {\r\n                url: 'assets/images/store.svg',\r\n                scaledSize: new google.maps.Size(35, 35), // size\r\n            },\r\n            title: '',\r\n        });\r\n        pickupMarker.setMap(this.map);\r\n        google.maps.event.addListener(pickupMarker, 'click', () => {\r\n            const infowindow = new google.maps.InfoWindow({\r\n                content: 'Pickup'\r\n            });\r\n            infowindow.open(this.map, pickupMarker);\r\n        });\r\n        this.dropLatLng = {\r\n            lat: this.order.delivery_location.latitude,\r\n            lng: this.order.delivery_location.longitude,\r\n        };\r\n        this.markers.push(this.dropLatLng);\r\n        const dropMarker = new google.maps.Marker({\r\n            position: new google.maps.LatLng(this.dropLatLng.lat, this.dropLatLng.lng),\r\n            icon: {\r\n                url: 'assets/images/home.svg',\r\n                scaledSize: new google.maps.Size(35, 35), // size\r\n            },\r\n            title: ''\r\n        });\r\n        dropMarker.setMap(this.map);\r\n        google.maps.event.addListener(dropMarker, 'click', () => {\r\n            const infowindow = new google.maps.InfoWindow({\r\n                content: 'Drop'\r\n            });\r\n            infowindow.open(this.map, dropMarker);\r\n        });\r\n        this.getRiderPathFromHerePathThenCacheLocally(this.order).then();\r\n        this.riderLatLng = {\r\n            lat: this.order.rider_position.latitude,\r\n            lng: this.order.rider_position.longitude,\r\n        };\r\n        this.oldRiderLatLng = this.riderLatLng;\r\n        const riderIcon = {\r\n            url: 'assets/images/bike.svg',\r\n            scaledSize: new google.maps.Size(40, 40),\r\n        };\r\n        const marker1 = new Marker({\r\n            map: this.map,\r\n            icon: riderIcon,\r\n            title: '',\r\n            position: new google.maps.LatLng(this.order.rider_position.latitude, this.order.rider_position.longitude),\r\n        });\r\n        //  var bounds = new google.maps.LatLngBounds();\r\n        this.map.panTo(new google.maps.LatLng(this.order.rider_position.latitude, this.order.rider_position.longitude));\r\n        this.subscribe = interval(2000)\r\n            .subscribe(() => {\r\n            this.orderService.init().then();\r\n            this.order = this.orderService.order;\r\n            this.riderLatLng = {\r\n                lat: this.order.rider_position.latitude,\r\n                lng: this.order.rider_position.longitude,\r\n            };\r\n            const newPosition = new google.maps.LatLng(this.riderLatLng.lat, this.riderLatLng.lng);\r\n            this.newPositionsList.push(this.riderLatLng.lat, this.riderLatLng.lng);\r\n            console.log(this.newPositionsList);\r\n            const lastPosn = new google.maps.LatLng(this.oldRiderLatLng.lat, this.oldRiderLatLng.lng);\r\n            this.map.panTo(newPosition);\r\n            // this.map.setCenter(newPosition);\r\n            const heading = google.maps.geometry.spherical.computeHeading(lastPosn, newPosition);\r\n            const bearing = this.getBearing(this.oldRiderLatLng.lat, this.oldRiderLatLng.lng, this.riderLatLng.lat, this.riderLatLng.lng);\r\n            const bearingData = Number(bearing.toFixed(0));\r\n            if (bearingData === 0) {\r\n                this.bikeSvg = this.oldBearingData - (this.oldBearingData % 15);\r\n            }\r\n            else {\r\n                this.bikeSvg = bearingData - (bearingData % 15);\r\n                this.oldBearingData = bearingData;\r\n            }\r\n            if (this.oldBearingData === undefined) {\r\n                marker1.setIcon({\r\n                    anchor: new google.maps.Point(45, 45),\r\n                    url: 'assets/images/bike.svg',\r\n                    scaledSize: new google.maps.Size(40, 40),\r\n                    // rotation: bearing\r\n                });\r\n            }\r\n            else {\r\n                marker1.setIcon({\r\n                    anchor: new google.maps.Point(45, 45),\r\n                    url: 'assets/images/svg/' + this.bikeSvg + '.svg',\r\n                    scaledSize: new google.maps.Size(40, 40),\r\n                    // rotation: bearing\r\n                });\r\n                moveMarker(newPosition);\r\n            }\r\n            console.log('old bearing', this.oldBearingData);\r\n            console.log(heading);\r\n            console.log(newPosition.lat() + \" lat : \" + newPosition.lng());\r\n            this.getRiderPathFromHerePathThenCacheLocally(this.order).then();\r\n            const result = [this.riderLatLng.lat, this.riderLatLng.lng];\r\n            const pos = [this.oldRiderLatLng.lat, this.oldRiderLatLng.lng];\r\n            this.oldRiderLatLng = this.riderLatLng;\r\n        });\r\n        if (this.order.status_name === 'delivered' || this.order.status_name === 'cancelled') {\r\n            this.subscribe.unsubscribe();\r\n        }\r\n        const numDeltas = 100;\r\n        const delay = 100;\r\n        let i = 0;\r\n        function moveMarker(linepos) {\r\n            marker1.setPosition(linepos);\r\n            if (i != numDeltas) {\r\n                i++;\r\n                setTimeout(moveMarker, delay);\r\n            }\r\n        }\r\n    }\r\n    radians(n) {\r\n        return n * (Math.PI / 180);\r\n    }\r\n    degrees(n) {\r\n        return n * (180 / Math.PI);\r\n    }\r\n    getBearing(startLat, startLong, endLat, endLong) {\r\n        startLat = this.radians(startLat);\r\n        startLong = this.radians(startLong);\r\n        endLat = this.radians(endLat);\r\n        endLong = this.radians(endLong);\r\n        var dLong = endLong - startLong;\r\n        var dPhi = Math.log(Math.tan(endLat / 2.0 + Math.PI / 4.0) / Math.tan(startLat / 2.0 + Math.PI / 4.0));\r\n        if (Math.abs(dLong) > Math.PI) {\r\n            if (dLong > 0.0)\r\n                dLong = -(2.0 * Math.PI - dLong);\r\n            else\r\n                dLong = (2.0 * Math.PI + dLong);\r\n        }\r\n        return (this.degrees(Math.atan2(dLong, dPhi)) + 360.0) % 360.0;\r\n    }\r\n    async getRiderPathFromHerePathThenCacheLocally(order) {\r\n        let origin, destination;\r\n        if (order.rider_position &&\r\n            order.rider_position.latitude && order.rider_position.longitude) {\r\n            origin = [order.rider_position.longitude, order.rider_position.latitude];\r\n        }\r\n        if (order.delivery_location &&\r\n            order.delivery_location.latitude &&\r\n            order.delivery_location.longitude) {\r\n            destination = [\r\n                order.delivery_location.longitude,\r\n                order.delivery_location.latitude,\r\n            ];\r\n        }\r\n        if (origin && destination) {\r\n            const request = this.http.post('https://routing.roadcast.co.in/ors/v2/directions/driving-car/geojson', {\r\n                coordinates: [\r\n                    origin, destination,\r\n                ],\r\n            }).subscribe((res) => {\r\n                this.coordinates = res.features[0].geometry.coordinates;\r\n                const coordsClean = this.coordinates.map((x) => {\r\n                    return { lat: x[1], lng: x[0] };\r\n                });\r\n                this.polyline.setMap(null);\r\n                this.polyline = new google.maps.Polyline({\r\n                    strokeColor: 'blue',\r\n                    map: this.map,\r\n                    path: coordsClean, geodesic: true, visible: true,\r\n                });\r\n                // console.log('polylines created')\r\n            });\r\n        }\r\n    }\r\n}\r\nTestMapComponent.ɵfac = function TestMapComponent_Factory(t) { return new (t || TestMapComponent)(i0.ɵɵdirectiveInject(i1.OrderService), i0.ɵɵdirectiveInject(i2.HttpClient)); };\r\nTestMapComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TestMapComponent, selectors: [[\"app-test-map\"]], viewQuery: function TestMapComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(_c0, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.mapElement = _t.first);\r\n    } }, decls: 2, vars: 0, consts: [[\"id\", \"map\", 2, \"border\", \"1px solid #35b0e3\", \"height\", \"50vh\", \"max-width\", \"100%\"], [\"map\", \"\"]], template: function TestMapComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelement(0, \"div\", 0, 1);\r\n    } }, styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0ZXN0LW1hcC5jb21wb25lbnQuY3NzIn0= */\"] });\r\n"]},"metadata":{},"sourceType":"module"}